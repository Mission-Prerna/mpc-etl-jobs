version: "3"
services:
  db:
    image: postgres:9.6
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${db_user_name}
      - POSTGRES_PASSWORD=${db_password}
      - POSTGRES_DB=${db_name}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

  graphql-engine:
    image: ${hasura_version}
    ports:
      - "5001:8080"
    depends_on:
      - db
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${db_user_name}:${db_password}@db:5432/${db_name}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${hasura_admin_pass}

  webserver:
    build: .
    # image: mpc-etl:latest
    restart: always
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - ./logs:/srv/logs/
    ports:
      - "8080:8080"
    command: gunicorn --workers=2 -b 0.0.0.0:8080 app:api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://webserver:8080"]
      interval: 2s
      timeout: 2s
      retries: 5

  worker:
    build: .
    # image: mpc-etl:latest
    restart: always
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - ./logs:/srv/logs/
    command: celery worker -A app.celery --loglevel=info

  # flower:
  #   image: samagragovernance/airflow:0.0.5
  #   restart: always
  #   depends_on:
  #     - redis
  #   environment:
  #     - EXECUTOR=Celery
  #     - REDIS_PASSWORD=redispass
  #   ports:
  #     - "5555:5555"
  #   command: flower
